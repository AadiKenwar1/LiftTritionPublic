# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

# ============================================================================
# WORKOUT CONTEXT MODELS
# ============================================================================

# ============================================================================
# V1 NESTED STRUCTURE (DEPRECATED - KEEP FOR MIGRATION)
# ============================================================================

type Workout @model {
  id: ID!
  userId: ID!           # Added for per-user data isolation
  name: String!
  exercises: AWSJSON! # Array of exercise objects stored as JSON
  order: Int!           # Added for explicit workout ordering
  archived: Boolean
  note: String
  synced: Boolean
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type UserExercise @model {
  id: ID!
  userId: ID!           # Added for per-user data isolation
  name: String!
  isCompound: Boolean!
  fatigueFactor: Float!
  userMax: Float
  mainMuscle: String!
  accessoryMuscles: [String]
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

# ============================================================================
# V2 FLAT STRUCTURE (NEW - PERFORMANCE OPTIMIZED)
# ============================================================================

type WorkoutV2 @model {
  id: ID!
  userId: ID!
  name: String!
  order: Int!
  archived: Boolean
  note: String
  synced: Boolean
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Exercise @model {
  id: ID!
  workoutId: ID!
  userId: ID!
  name: String!
  userMax: Float
  order: Int!
  archived: Boolean
  note: String
  synced: Boolean
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type ExerciseLog @model {
  id: ID!
  exerciseId: ID!
  workoutId: ID!
  userId: ID!
  date: String!
  weight: Float!
  reps: Int!
  rpe: Float!
  synced: Boolean
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

# ============================================================================
# SETTINGS CONTEXT MODELS
# ============================================================================

type Nutrition @model {
  id: ID!
  userId: ID!
  name: String!
  date: String!
  time: Float!
  protein: Float!
  carbs: Float!
  fats: Float!
  calories: Float!
  isPhoto: Boolean
  ingredients: [String]
  saved: Boolean
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Settings @model {
  id: ID!         # This will be the userId for the settings record
  mode: Boolean
  unit: Boolean
  birthDate: String
  age: Int
  gender: String
  bodyWeight: Float
  weightProgress: AWSJSON
  height: Float
  activityFactor: Float
  goalType: String
  goalWeight: Float
  goalPace: Float
  calorieGoal: Int
  proteinGoal: Int
  carbsGoal: Int
  fatsGoal: Int
  onboardingCompleted: Boolean
  lastExercise: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

